(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.2' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    200616,       4399]
NotebookOptionsPosition[    196453,       4326]
NotebookOutlinePosition[    196818,       4342]
CellTagsIndexPosition[    196775,       4339]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[BoxData[{
 RowBox[{
  RowBox[{"EURUSD", "=", 
   RowBox[{"Import", "[", 
    RowBox[{"\"\</Users/wanghaibiao/Desktop/hf dk model.xlsx\>\"", ",", 
     RowBox[{"{", 
      RowBox[{"\"\<Data\>\"", ",", "1", ",", 
       RowBox[{"Table", "[", 
        RowBox[{"i", ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "2", ",", "34"}], "}"}]}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "3"}], "}"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"eurusd", "=", 
   RowBox[{"Import", "[", 
    RowBox[{"\"\</Users/wanghaibiao/Desktop/hf dk model.xlsx\>\"", ",", 
     RowBox[{"{", 
      RowBox[{"\"\<Data\>\"", ",", "1", ",", 
       RowBox[{"Table", "[", 
        RowBox[{"i", ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "2", ",", "34"}], "}"}]}], "]"}], ",", "3"}], 
      "}"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"GBPUSD", "=", 
   RowBox[{"Import", "[", 
    RowBox[{"\"\</Users/wanghaibiao/Desktop/hf dk model.xlsx\>\"", ",", 
     RowBox[{"{", 
      RowBox[{"\"\<Data\>\"", ",", "1", ",", 
       RowBox[{"Table", "[", 
        RowBox[{"i", ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "2", ",", "34"}], "}"}]}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "2"}], "}"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"gbpusd", "=", 
   RowBox[{"Import", "[", 
    RowBox[{"\"\</Users/wanghaibiao/Desktop/hf dk model.xlsx\>\"", ",", 
     RowBox[{"{", 
      RowBox[{"\"\<Data\>\"", ",", "1", ",", 
       RowBox[{"Table", "[", 
        RowBox[{"i", ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "2", ",", "34"}], "}"}]}], "]"}], ",", "2"}], 
      "}"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"date", "=", 
   RowBox[{"Import", "[", 
    RowBox[{"\"\</Users/wanghaibiao/Desktop/hf dk model.xlsx\>\"", ",", 
     RowBox[{"{", 
      RowBox[{"\"\<Data\>\"", ",", "1", ",", 
       RowBox[{"Table", "[", 
        RowBox[{"i", ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "2", ",", "34"}], "}"}]}], "]"}], ",", "1"}], 
      "}"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"DateListPlot", "[", 
  RowBox[{"EURUSD", ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"Placed", "[", 
     RowBox[{
      RowBox[{"{", "\"\<EUR/USD\>\"", "}"}], ",", "Above"}], "]"}]}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"DateListPlot", "[", 
  RowBox[{"GBPUSD", ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"Placed", "[", 
     RowBox[{
      RowBox[{"{", "\"\<GBP/USD\>\"", "}"}], ",", "Above"}], "]"}]}]}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.7444030381633053`*^9, 3.74440311450228*^9}, {
  3.744403174935581*^9, 3.7444031976045856`*^9}, {3.744403277660716*^9, 
  3.744403287315672*^9}, {3.7444051594333897`*^9, 3.744405159757983*^9}, {
  3.7444078167862883`*^9, 3.7444078293190327`*^9}, {3.7444084447795343`*^9, 
  3.744408454064678*^9}, {3.744484068940878*^9, 3.744484084435739*^9}, {
  3.7444841898642883`*^9, 3.744484203253034*^9}, {3.744484329119277*^9, 
  3.744484338195031*^9}, {3.7444851927418203`*^9, 3.7444852049231243`*^9}, {
  3.74448596718928*^9, 3.744486004825382*^9}, {3.744655040736203*^9, 
  3.744655071070087*^9}},ExpressionUUID->"4d0b0518-2efa-457e-8d64-\
570e7b1ad175"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.012833333333333334`], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJxTTMoPSmViYGBQBGIQDQRJh+6+dpxY99uq4NwnewaGBbUgvl1lxArTsyC+
wkwQn0m7XewmRH4LmvwFEF/hUn48O0T+NSpfgf0wqvlKqHwFOxB/veqT5nlg
8xZEHkY1vxRN/4TDqOavQdN/HM38x2jy/1D5ClJHUOxbYHoE1fzAI6j6c1D5
Ch1o8ovR5Pejyd9Ck/+GZr/gUVT/6x5F1e8B4p89AwJg+RQQP0bB8WMymL+g
Hk3/bFT+gm1o+i8h6wcApacOZQ==
         "]]}}}, {}, {}, {}, {}}, {
    DisplayFunction -> Identity, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, AxesOrigin -> {3.7401444*^9, 1.17487}, 
     PlotRange -> {{3.7401444*^9, 3.740151441*^9}, {1.1749, 1.1755}}, 
     PlotRangeClipping -> True, ImagePadding -> All, DisplayFunction -> 
     Identity, AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
     Axes -> {False, False}, AxesLabel -> {None, None}, 
     AxesOrigin -> {3.7401444*^9, 1.17487}, DisplayFunction :> Identity, 
     Frame -> {{True, True}, {True, True}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Charting`FindScaledTicks[
         (Charting`getDateTicks[Automatic, {Automatic}, 
          (Map[DateList, {
            SlotSequence[1]}]& )[
           SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
          Automatic]& )[
          SlotSequence[1]], {Identity, Identity}]& , Charting`ScaledFrameTicks[
         (Charting`getDateTicks[
         Charting`getDateTicks[Automatic, {Automatic}, 
           (Map[DateList, {
             SlotSequence[1]}]& )[
            SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
           Automatic]& , {Automatic}, 
          (Map[DateList, {
            SlotSequence[1]}]& )[
           SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, None]& )[
          SlotSequence[1]], {Identity, Identity}]& }}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{3.7401444*^9, 3.740151441*^9}, {1.1749, 1.1755}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, Ticks -> {{}, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"EUR/USD\""}, "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.231], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.231], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxDividers -> {"Columns" -> {{None}}, "Rows" -> {{None}}}, 
             GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
             GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{"Directive", "[", 
               RowBox[{
                 RowBox[{"PointSize", "[", "0.012833333333333334`", "]"}], 
                 ",", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                   None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                   DefaultBaseStyle -> {}, ButtonFunction :> 
                   With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  RGBColor[0.368417, 0.506779, 0.709798], Editable -> False, 
                  Selectable -> False], ",", 
                 RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
             "}"}], ",", 
           RowBox[{"{", #, "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"{", 
                 RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", "True", "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}, {
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {2, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "Above"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.744403213253162*^9, 3.744403298251721*^9, 3.744407974128664*^9, 
   3.744408460916707*^9, 3.744484095376589*^9, 3.744484223553597*^9, 
   3.744484376183881*^9, 3.744485211692122*^9, 3.744486010719376*^9, {
   3.7446550549525623`*^9, 3.7446550761016407`*^9}, 
   3.744657365868987*^9},ExpressionUUID->"5410c7fc-4545-4064-94c1-\
4f1917b92da8"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.012833333333333334`], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJxTTMoPSmViYGBQBGIQDQRJh+6+dpz3fvkxb/Ov9gwMC2pB/IyJb2vsTUF8
hZkg/mXfJIEIS7D8FlT1ChdAfF1nmdePzMDyr0F871csJoJgvgL7YSCff47x
oi0Q85UOo+q3O4yqP/Iwqv5SNP0TUNUrrAHx90ybwF8F0X8czfzHaOb/QzNf
6giQf9O2MmIF2L8LTI+gmh94BNX8nCOo+jvQ9C9GVa+wH1X9glto8t9AfNEe
L6AKsLzgUSB/yf19fHOMwfK6R1H1e6DJp4D4xmAAlq8H8b8/SVx4DWyewuyj
qOZvQ1WvcAmZDwCPyvPV
         "]]}}}, {}, {}, {}, {}}, {
    DisplayFunction -> Identity, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, AxesOrigin -> {3.7401444*^9, 1.3249250000000001`}, 
     PlotRange -> {{3.7401444*^9, 3.740151441*^9}, {1.325, 1.3265}}, 
     PlotRangeClipping -> True, ImagePadding -> All, DisplayFunction -> 
     Identity, AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
     Axes -> {False, False}, AxesLabel -> {None, None}, 
     AxesOrigin -> {3.7401444*^9, 1.3249250000000001`}, DisplayFunction :> 
     Identity, Frame -> {{True, True}, {True, True}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Charting`FindScaledTicks[
         (Charting`getDateTicks[Automatic, {Automatic}, 
          (Map[DateList, {
            SlotSequence[1]}]& )[
           SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
          Automatic]& )[
          SlotSequence[1]], {Identity, Identity}]& , Charting`ScaledFrameTicks[
         (Charting`getDateTicks[
         Charting`getDateTicks[Automatic, {Automatic}, 
           (Map[DateList, {
             SlotSequence[1]}]& )[
            SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
           Automatic]& , {Automatic}, 
          (Map[DateList, {
            SlotSequence[1]}]& )[
           SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, None]& )[
          SlotSequence[1]], {Identity, Identity}]& }}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{3.7401444*^9, 3.740151441*^9}, {1.325, 1.3265}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, Ticks -> {{}, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"GBP/USD\""}, "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.231], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.231], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxDividers -> {"Columns" -> {{None}}, "Rows" -> {{None}}}, 
             GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
             GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{"Directive", "[", 
               RowBox[{
                 RowBox[{"PointSize", "[", "0.012833333333333334`", "]"}], 
                 ",", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                   None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                   DefaultBaseStyle -> {}, ButtonFunction :> 
                   With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  RGBColor[0.368417, 0.506779, 0.709798], Editable -> False, 
                  Selectable -> False], ",", 
                 RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
             "}"}], ",", 
           RowBox[{"{", #, "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"{", 
                 RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", "True", "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}, {
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {2, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "Above"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.744403213253162*^9, 3.744403298251721*^9, 3.744407974128664*^9, 
   3.744408460916707*^9, 3.744484095376589*^9, 3.744484223553597*^9, 
   3.744484376183881*^9, 3.744485211692122*^9, 3.744486010719376*^9, {
   3.7446550549525623`*^9, 3.7446550761016407`*^9}, 
   3.744657366007646*^9},ExpressionUUID->"a7098e6d-a1d1-44dd-8779-\
d327d43ac75f"]
}, Open  ]],

Cell["\<\
we modify the tick data, there are four ticks in one minute, we just take one \
tick data. (Ultra tick data can not be fitted by the variance gamma process). \
Although this extremely small size of data is successful to generate the \
simulation of exchange rate, however, such small size of the observation, may \
not successful all the time.\
\>", "Item",
 CellChangeTimes->{
  3.746531181920685*^9, {3.746531215256221*^9, 3.746531414901512*^9}, {
   3.746531450973015*^9, 
   3.74653148716453*^9}},ExpressionUUID->"9fafa1e6-0f29-4707-87c5-\
24f3a408e40e"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"gbpusdr", "=", 
   RowBox[{"Differences", "[", 
    RowBox[{"Log", "[", "gbpusd", "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"eurusdr", "=", 
   RowBox[{"Differences", "[", 
    RowBox[{"Log", "[", "eurusd", "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"GBPUSDr", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"date", "[", 
        RowBox[{"[", 
         RowBox[{"i", "+", "4"}], "]"}], "]"}], ",", 
       RowBox[{"gbpusdr", "[", 
        RowBox[{"[", 
         RowBox[{"i", "+", "4"}], "]"}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", "25"}], "}"}]}], "]"}]}], ";", 
  RowBox[{"EURUSDr", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"date", "[", 
        RowBox[{"[", 
         RowBox[{"i", "+", "4"}], "]"}], "]"}], ",", 
       RowBox[{"eurusdr", "[", 
        RowBox[{"[", 
         RowBox[{"i", "+", "4"}], "]"}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", "25"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"mMAgbpusdr", "=", 
   RowBox[{"MovingAverage", "[", 
    RowBox[{"gbpusdr", ",", "8"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"mMAeurusdr", "=", 
   RowBox[{"MovingAverage", "[", 
    RowBox[{"eurusdr", ",", "8"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"mMAGBPUSDr", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"date", "[", 
        RowBox[{"[", 
         RowBox[{"i", "+", "4"}], "]"}], "]"}], ",", 
       RowBox[{"mMAgbpusdr", "[", 
        RowBox[{"[", "i", "]"}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", "25"}], "}"}]}], "]"}]}], ";", 
  RowBox[{"mMAEURUSDr", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"date", "[", 
        RowBox[{"[", 
         RowBox[{"i", "+", "4"}], "]"}], "]"}], ",", 
       RowBox[{"mMAeurusdr", "[", 
        RowBox[{"[", "i", "]"}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", "25"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"DateListPlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"GBPUSDr", ",", "mMAGBPUSDr"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"All", ",", "All"}], "}"}]}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"Placed", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"\"\<GBPUSDR\>\"", ",", "\"\<MA_GBPUSDr\>\""}], "}"}], ",", 
      "Above"}], "]"}]}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"DateListPlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"EURUSDr", ",", "mMAEURUSDr"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"All", ",", "All"}], "}"}]}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"Placed", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"\"\<EURUSDR\>\"", ",", "\"\<MA_EURUSDr\>\""}], "}"}], ",", 
      "Above"}], "]"}]}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.7444047097844963`*^9, 3.7444047355571527`*^9}, {
  3.744404813187695*^9, 3.744404815281171*^9}, {3.744405114213408*^9, 
  3.744405118203562*^9}, {3.7444051631422997`*^9, 3.744405219825404*^9}, {
  3.7444055285616503`*^9, 3.7444055626065683`*^9}, {3.744408025011447*^9, 
  3.7444080964440317`*^9}, {3.744408476331109*^9, 3.744408493466173*^9}, {
  3.744484209767521*^9, 3.744484216077317*^9}, {3.7444843431340637`*^9, 
  3.7444843469809933`*^9}, {3.744484578632662*^9, 3.744484629063395*^9}, {
  3.744484862872904*^9, 3.744484910336022*^9}, {3.7444852531240797`*^9, 
  3.7444852593370943`*^9}, {3.744485518500423*^9, 3.744485549119091*^9}, {
  3.74448575867367*^9, 3.7444857886947727`*^9}, {3.744486021252001*^9, 
  3.744486053784953*^9}, {3.744486211890978*^9, 
  3.744486231992178*^9}},ExpressionUUID->"dbe7fa09-171c-4527-a3b5-\
59c2153a62f4"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.011000000000000001`], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJxTTMoPSmViYGCQBGIQzcCgcOHQ3deODAwH2g4fVd7PwLDgNZj/Z9LZxKPG
9kB59sMgfsEmy/NHhEHySmB+g+R7g6MgvoLdYVT9kYdR9ZeC+T9SRRgg8hMg
5rmtmATRvwYiv/504lFloPoFx9HMf4xm/j8w3+GzatgxsLzUERB/wc6Z71bo
gvSbHkE1PxDMn2CZ+gXMX5BzBFV/B5ifMc1V9RjY/sWo6hX2I/FB8rfA/BP5
trGrbEHy38D8C5ZK9ifA5gseBfFvrH/zfpUtyP+6SHyQvAeYrzDv5wKweoUU
MN/F34rvhLE9AL4CtqY=
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.011000000000000001`], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJxTTMoPSmViYGCQBGIQzcCgcOHQ3deODA2S7w2OPt7HwLDgNZhvYMzRfuyz
HVCe/TCIv4SH/fZh5v1AeaXDKOoV7MD8ArcVkyD6I8H8Az7/olf8BekvBfN/
pIowHP0Mkp+AJA/SvwbMX7Bz5jswf8FxMJ/hQNvho2D7H4P5Bp0ZJ5eD5f8h
yYP0Sx0B8TOmuaoeA5tvCub/WH86ESIfeARF/YIcMH+CZeqXo49B5neA+VOW
zPI6DvbfYjD/DfuNF8eEgXyF/UjqQfpvgfk31r95v4oXJP8NIj9rYdNqEH+B
4FFw+IhxtR8DmaegC+anKKo82MEBkvcA8x8ZLfI6DjY/Bcz/8Zq34MTnfQBc
HcPo
         "]]}}}, {}, {}, {}, {}}, {
    DisplayFunction -> Identity, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, AxesOrigin -> {3.740145281*^9, 0}, 
     PlotRange -> {{3.740145281*^9, 3.740150561*^9}, {-0.0004526935342136218, 
      0.0004526935342136218}}, PlotRangeClipping -> True, ImagePadding -> All,
      DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, False}, 
     AxesLabel -> {None, None}, AxesOrigin -> {3.740145281*^9, 0}, 
     DisplayFunction :> Identity, Frame -> {{True, True}, {True, True}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Charting`FindScaledTicks[
         (Charting`getDateTicks[Automatic, {Automatic}, 
          (Map[DateList, {
            SlotSequence[1]}]& )[
           SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
          Automatic]& )[
          SlotSequence[1]], {Identity, Identity}]& , Charting`ScaledFrameTicks[
         (Charting`getDateTicks[
         Charting`getDateTicks[Automatic, {Automatic}, 
           (Map[DateList, {
             SlotSequence[1]}]& )[
            SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
           Automatic]& , {Automatic}, 
          (Map[DateList, {
            SlotSequence[1]}]& )[
           SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, None]& )[
          SlotSequence[1]], {Identity, Identity}]& }}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{3.740145281*^9, 3.740150561*^9}, {-0.0004526935342136218, 
      0.0004526935342136218}}, PlotRangeClipping -> True, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, Ticks -> {{}, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"GBPUSDR\"", "\"MA_GBPUSDr\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.198], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.198], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.198], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.198], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxDividers -> {"Columns" -> {{None}}, "Rows" -> {{None}}}, 
             GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
             GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.011000000000000001`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.011000000000000001`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"True", ",", "True"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}, {
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {2, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "Above"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.744403605577516*^9, 3.7444047380013733`*^9, 3.7444048164438477`*^9, {
   3.744405181278884*^9, 3.744405223224432*^9}, {3.744405553478297*^9, 
   3.744405563399*^9}, {3.7444080616128597`*^9, 3.744408096842293*^9}, 
   3.744408495177953*^9, 3.744484105083159*^9, 3.7444842317448883`*^9, 
   3.744484381747621*^9, {3.744484613185845*^9, 3.744484630632682*^9}, {
   3.744484897195689*^9, 3.744484913104294*^9}, 3.744485230083167*^9, 
   3.744485261584943*^9, 3.744485551545281*^9, 3.7444857910562887`*^9, 
   3.744486055521656*^9, 3.744486234635601*^9, 
   3.7446573683212547`*^9},ExpressionUUID->"f57c063f-3522-4847-8b1c-\
2ebbe1dc970e"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.011000000000000001`], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJxTTMoPSmViYGCQBGIQzcCgcOHQ3deODHCw4DWYr/FfcaOvmD1Qnv0wqrwS
mL9kVuB7X7X9QHk7MN/hxtOVfmJA/oJIMD/JWWnRLgOQ/tLDCPNA8hPAfAWz
Rl2weoU1SOYB1S84jmb+YzT7/6HapyB1BMQ3aN+c7QfWb3oE1fzAI6j6c1D5
Ch1o8ovR5Pejyd86gmr/NzR5waMIeZD/dcF8hftSL/xA/lngAebPiN+/yB+s
PwXMP7OoPcVfzR4AWnGPdQ==
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.011000000000000001`], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJxTTMoPSmViYGCQBGIQzcCgcOHQ3deODEtmBb73/baPgWHBazAfDhTYD4P4
AsYnTHyfgeSVwHyD9s3Zft/sgPJ2YL6CWaOuH1g+EszX+K+40fcZSL70MKr5
E1D5CmvAfIcbT1dC9B9HM/8xmv5/qPYpSB1Bce8C0yOo5geiyeeg8hU60OQX
H0HYD9K/H03+FpivcF/qBUT+G5hf5r43ZjfDfqC84FEU/yjoovIXeBxF1Z8C
5p9Z1J7i/20fAKZuqGY=
         "]]}}}, {}, {}, {}, {}}, {
    DisplayFunction -> Identity, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, AxesOrigin -> {3.740145281*^9, 0}, 
     PlotRange -> {{3.740145281*^9, 
      3.740150561*^9}, {-0.00017019828140818483`, 0.0002552648386547063}}, 
     PlotRangeClipping -> True, ImagePadding -> All, DisplayFunction -> 
     Identity, AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
     Axes -> {False, False}, AxesLabel -> {None, None}, 
     AxesOrigin -> {3.740145281*^9, 0}, DisplayFunction :> Identity, 
     Frame -> {{True, True}, {True, True}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Charting`FindScaledTicks[
         (Charting`getDateTicks[Automatic, {Automatic}, 
          (Map[DateList, {
            SlotSequence[1]}]& )[
           SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
          Automatic]& )[
          SlotSequence[1]], {Identity, Identity}]& , Charting`ScaledFrameTicks[
         (Charting`getDateTicks[
         Charting`getDateTicks[Automatic, {Automatic}, 
           (Map[DateList, {
             SlotSequence[1]}]& )[
            SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
           Automatic]& , {Automatic}, 
          (Map[DateList, {
            SlotSequence[1]}]& )[
           SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, None]& )[
          SlotSequence[1]], {Identity, Identity}]& }}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{3.740145281*^9, 
      3.740150561*^9}, {-0.00017019828140818483`, 0.0002552648386547063}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, Ticks -> {{}, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"EURUSDR\"", "\"MA_EURUSDr\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.198], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.198], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.198], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.198], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxDividers -> {"Columns" -> {{None}}, "Rows" -> {{None}}}, 
             GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
             GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.011000000000000001`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.011000000000000001`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"True", ",", "True"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}, {
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {2, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "Above"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.744403605577516*^9, 3.7444047380013733`*^9, 3.7444048164438477`*^9, {
   3.744405181278884*^9, 3.744405223224432*^9}, {3.744405553478297*^9, 
   3.744405563399*^9}, {3.7444080616128597`*^9, 3.744408096842293*^9}, 
   3.744408495177953*^9, 3.744484105083159*^9, 3.7444842317448883`*^9, 
   3.744484381747621*^9, {3.744484613185845*^9, 3.744484630632682*^9}, {
   3.744484897195689*^9, 3.744484913104294*^9}, 3.744485230083167*^9, 
   3.744485261584943*^9, 3.744485551545281*^9, 3.7444857910562887`*^9, 
   3.744486055521656*^9, 3.744486234635601*^9, 
   3.7446573684772463`*^9},ExpressionUUID->"794a4988-f524-4fca-9453-\
47885c5ceecb"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Dgbpusdr", "=", " ", 
   RowBox[{
    RowBox[{"Take", "[", 
     RowBox[{
      RowBox[{"Drop", "[", 
       RowBox[{"gbpusdr", ",", "4"}], "]"}], ",", "25"}], "]"}], "-", 
    "mMAgbpusdr"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Deurusdr", "=", " ", 
   RowBox[{
    RowBox[{"Take", "[", 
     RowBox[{
      RowBox[{"Drop", "[", 
       RowBox[{"eurusdr", ",", "4"}], "]"}], ",", "25"}], "]"}], "-", 
    "mMAeurusdr"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"DGBPUSDr", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"date", "[", 
        RowBox[{"[", 
         RowBox[{"i", "+", "4"}], "]"}], "]"}], ",", 
       RowBox[{"Dgbpusdr", "[", 
        RowBox[{"[", 
         RowBox[{"i", "+", "4"}], "]"}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", "17"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"DEURUSDr", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"date", "[", 
        RowBox[{"[", 
         RowBox[{"i", "+", "4"}], "]"}], "]"}], ",", 
       RowBox[{"Deurusdr", "[", 
        RowBox[{"[", 
         RowBox[{"i", "+", "4"}], "]"}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", "17"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"mMADgbpusdr", "=", 
   RowBox[{"MovingAverage", "[", 
    RowBox[{"Dgbpusdr", ",", "8"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"mMADeurusdr", "=", 
   RowBox[{"MovingAverage", "[", 
    RowBox[{"Deurusdr", ",", "8"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"mMADGBPUSDr", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"date", "[", 
        RowBox[{"[", 
         RowBox[{"i", "+", "4"}], "]"}], "]"}], ",", 
       RowBox[{"mMADgbpusdr", "[", 
        RowBox[{"[", "i", "]"}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", "17"}], "}"}]}], "]"}]}], ";", 
  RowBox[{"mMADEURUSDr", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"date", "[", 
        RowBox[{"[", 
         RowBox[{"i", "+", "4"}], "]"}], "]"}], ",", 
       RowBox[{"mMADeurusdr", "[", 
        RowBox[{"[", "i", "]"}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", "17"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"DateListPlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"DGBPUSDr", ",", "mMADGBPUSDr"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"All", ",", "All"}], "}"}]}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"Placed", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"\"\<Detrended GBP/USDR\>\"", ",", "\"\<MA_DGBP/USDr\>\""}], 
       "}"}], ",", "Above"}], "]"}]}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"DateListPlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"DEURUSDr", ",", "mMADEURUSDr"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"Placed", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"\"\<Detrended EUR/USDR\>\"", ",", "\"\<MA_DEUR/USDr\>\""}], 
       "}"}], ",", "Above"}], "]"}]}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.7444058258609467`*^9, 3.7444058744395123`*^9}, {
  3.744405924858156*^9, 3.7444059753934927`*^9}, {3.744408155372142*^9, 
  3.744408183453821*^9}, {3.744408504739254*^9, 3.74440854324562*^9}, {
  3.744484237316979*^9, 3.744484245636655*^9}, {3.744484354533401*^9, 
  3.74448436888544*^9}, {3.744484648292981*^9, 3.744484670271864*^9}, {
  3.744484706648238*^9, 3.7444847227588167`*^9}, {3.7444849214563217`*^9, 
  3.744485011343546*^9}, {3.744485267000723*^9, 3.7444852801362677`*^9}, {
  3.744485555760375*^9, 3.744485651948077*^9}, {3.744485826100963*^9, 
  3.744485882312868*^9}, {3.7444860607864017`*^9, 3.744486101056518*^9}, {
  3.744486238336843*^9, 
  3.744486265279203*^9}},ExpressionUUID->"84e97509-3f29-478b-ad93-\
d7ded39e00c1"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.012833333333333334`], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        LineBox[{{3.740145281*^9, -0.0001414244016963509}, {3.740145501*^9, 
         0.0002733981361238147}, {3.740145721*^9, -0.00013197586752018015`}, {
         3.740145941*^9, -0.00004713957075641595}, {3.740146161*^9, 
         0.00017912681455664603`}, {
         3.740146381*^9, -0.00009427416461837979}, {
         3.740146601*^9, -0.00012257070633632516`}, {
         3.740146821*^9, -0.000056578152967334816`}, {3.740147041*^9, 
         0.000245144970187329}, {3.740147261*^9, -0.00005656819606731506}, {
         3.740147481*^9, -0.000056572463003556894`}, {
         3.740147701*^9, -0.0000848633177618699}, {3.740147921*^9, 
         0.00018858815576470317`}, {3.740148141*^9, 
         1.4228773145830154`*^-8}, {3.740148361*^9, 0.00008485762779809197}, {
         3.740148581*^9, -0.0003960726897737771}, {
         3.740148801*^9, -0.000018872193646518598`}}]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.012833333333333334`], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        LineBox[{{3.740145281*^9, -1.1809775313500678`*^-6}, {3.740145501*^9, 
         0.000038888013379136284`}, {
         3.740145721*^9, -8.249068983637482*^-6}, {
         3.740145941*^9, -0.000018856272780011507`}, {
         3.740146161*^9, -0.000017679739151815754`}, {3.740146381*^9, 
         0.000030641432333644233`}, {
         3.740146601*^9, -0.000010604359190246986`}, {
         3.740146821*^9, -1.1789336256690791`*^-6}, {
         3.740147041*^9, -5.894402001350822*^-6}, {
         3.740147261*^9, -4.71173435034368*^-6}, {3.740147481*^9, 
         7.074314823597022*^-6}, {3.740147701*^9, 0.000033002856590399164`}, {
         3.740147921*^9, -9.433960510406118*^-6}, {
         3.740148141*^9, -0.00004243610598963707}, {3.740148361*^9, 
         0.000025936456438680096`}, {
         3.740148581*^9, -0.00001768445278971416}, {
         3.740148801*^9, -7.0790289315794674`*^-6}}]}}}, {}, {}, {}, {}}, {
    DisplayFunction -> Identity, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, AxesOrigin -> {3.740145281*^9, 0}, 
     PlotRange -> {{3.740145281*^9, 3.740148801*^9}, {-0.0003960726897737771, 
      0.0002733981361238147}}, PlotRangeClipping -> True, ImagePadding -> All,
      DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, False}, 
     AxesLabel -> {None, None}, AxesOrigin -> {3.740145281*^9, 0}, 
     DisplayFunction :> Identity, Frame -> {{True, True}, {True, True}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Charting`FindScaledTicks[
         (Charting`getDateTicks[Automatic, {Automatic}, 
          (Map[DateList, {
            SlotSequence[1]}]& )[
           SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
          Automatic]& )[
          SlotSequence[1]], {Identity, Identity}]& , Charting`ScaledFrameTicks[
         (Charting`getDateTicks[
         Charting`getDateTicks[Automatic, {Automatic}, 
           (Map[DateList, {
             SlotSequence[1]}]& )[
            SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
           Automatic]& , {Automatic}, 
          (Map[DateList, {
            SlotSequence[1]}]& )[
           SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, None]& )[
          SlotSequence[1]], {Identity, Identity}]& }}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{3.740145281*^9, 3.740148801*^9}, {-0.0003960726897737771, 
      0.0002733981361238147}}, PlotRangeClipping -> True, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, Ticks -> {{}, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"Detrended GBP/USDR\"", "\"MA_DGBP/USDr\""}, "LineLegend",
       DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.231], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.231], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.231], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.231], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxDividers -> {"Columns" -> {{None}}, "Rows" -> {{None}}}, 
             GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
             GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.012833333333333334`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.012833333333333334`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"True", ",", "True"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}, {
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {2, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "Above"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.7444059387346897`*^9, 3.744405977768571*^9, 3.744408188078388*^9, 
   3.7444085447106447`*^9, 3.744484109652111*^9, 3.74448424797646*^9, 
   3.7444843863309307`*^9, 3.7444847248722143`*^9, {3.744484994757962*^9, 
   3.744485012795279*^9}, 3.744485399435635*^9, 3.744485623013771*^9, 
   3.744485653432582*^9, {3.744485874433922*^9, 3.744485884744589*^9}, 
   3.744486103754521*^9, 3.744486267878557*^9, 
   3.744657371511252*^9},ExpressionUUID->"a2f7adf7-4424-4415-aafa-\
5c29c490b473"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.012833333333333334`], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        LineBox[{{3.740145281*^9, -0.00007445948487959375}, {3.740145501*^9, 
         0.0002446297086870046}, {3.740145721*^9, -0.00006380987488130083}, {
         3.740145941*^9, -0.00006381711428057532}, {3.740146161*^9, 
         0.00018080625885402712`}, {
         3.740146381*^9, -0.00019144229374663813`}, {3.740146601*^9, 
         0.00002127116486031269}, {3.740146821*^9, -0.00007445948487959375}, {
         3.740147041*^9, 0.00017018379891309277`}, {
         3.740147261*^9, -0.00006381711428057532}, {3.740147481*^9, 0.}, {
         3.740147701*^9, 0.}, {3.740147921*^9, 0.}, {3.740148141*^9, 
         0.000021272974864136596`}, {3.740148361*^9, 0.}, {
         3.740148581*^9, -0.00006382073459618165}, {3.740148801*^9, 
         0.000031913535767574136`}}]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.012833333333333334`], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        LineBox[{{3.740145281*^9, -3.989078662801349*^-6}, {3.740145501*^9, 
         0.000015952808086412956`}, {
         3.740145721*^9, -0.0000186126085996185}, {
         3.740145941*^9, -0.000017282991141675218`}, {
         3.740146161*^9, -2.660140033294671*^-6}, {3.740146381*^9, 
         0.000027920270440791144`}, {
         3.740146601*^9, -0.000010635582430156346`}, {
         3.740146821*^9, -2.6593480699937423`*^-6}, {3.740147041*^9, 
         5.317791215078173*^-6}, {
         3.740147261*^9, -0.000017282991141675218`}, {3.740147481*^9, 
         9.306417434671622*^-6}, {3.740147701*^9, 6.647521827132536*^-6}, {
         3.740147921*^9, 7.977365612559049*^-6}, {
         3.740148141*^9, -9.30641728063078*^-6}, {3.740148361*^9, 
         0.000010637279472407429`}, {
         3.740148581*^9, -9.307888207174975*^-6}, {
         3.740148801*^9, -0.00001728729065172312}}]}}}, {}, {}, {}, {}}, {
    DisplayFunction -> Identity, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, AxesOrigin -> {3.740145281*^9, 0}, 
     PlotRange -> {{3.740145281*^9, 
      3.740148801*^9}, {-0.00019144229374663813`, 0.0002446297086870046}}, 
     PlotRangeClipping -> True, ImagePadding -> All, DisplayFunction -> 
     Identity, AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
     Axes -> {False, False}, AxesLabel -> {None, None}, 
     AxesOrigin -> {3.740145281*^9, 0}, DisplayFunction :> Identity, 
     Frame -> {{True, True}, {True, True}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Charting`FindScaledTicks[
         (Charting`getDateTicks[Automatic, {Automatic}, 
          (Map[DateList, {
            SlotSequence[1]}]& )[
           SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
          Automatic]& )[
          SlotSequence[1]], {Identity, Identity}]& , Charting`ScaledFrameTicks[
         (Charting`getDateTicks[
         Charting`getDateTicks[Automatic, {Automatic}, 
           (Map[DateList, {
             SlotSequence[1]}]& )[
            SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
           Automatic]& , {Automatic}, 
          (Map[DateList, {
            SlotSequence[1]}]& )[
           SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, None]& )[
          SlotSequence[1]], {Identity, Identity}]& }}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{3.740145281*^9, 
      3.740148801*^9}, {-0.00019144229374663813`, 0.0002446297086870046}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, Ticks -> {{}, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"Detrended EUR/USDR\"", "\"MA_DEUR/USDr\""}, "LineLegend",
       DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.231], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.231], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.231], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.231], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxDividers -> {"Columns" -> {{None}}, "Rows" -> {{None}}}, 
             GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
             GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.012833333333333334`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.012833333333333334`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"True", ",", "True"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}, {
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {2, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "Above"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.7444059387346897`*^9, 3.744405977768571*^9, 3.744408188078388*^9, 
   3.7444085447106447`*^9, 3.744484109652111*^9, 3.74448424797646*^9, 
   3.7444843863309307`*^9, 3.7444847248722143`*^9, {3.744484994757962*^9, 
   3.744485012795279*^9}, 3.744485399435635*^9, 3.744485623013771*^9, 
   3.744485653432582*^9, {3.744485874433922*^9, 3.744485884744589*^9}, 
   3.744486103754521*^9, 3.744486267878557*^9, 
   3.7446573716784573`*^9},ExpressionUUID->"cd8e6cbf-bb65-437c-806e-\
e7fd22c42ca5"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"NSolve", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"m", "+", "theta"}], "\[Equal]", 
     RowBox[{"Mean", "[", 
      RowBox[{"Dgbpusdr", "*", "100"}], "]"}]}], "&&", 
    RowBox[{
     RowBox[{
      RowBox[{"sigma", "^", "2"}], "+", 
      RowBox[{"theta", "^", "2"}]}], "\[Equal]", 
     RowBox[{"Variance", "[", 
      RowBox[{"Dgbpusdr", "*", "100"}], "]"}]}], "&&", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"2", "*", 
         RowBox[{"theta", "^", "3"}]}], "+", 
        RowBox[{"3", 
         RowBox[{"sigma", "^", "2"}], "*", "theta"}]}], ")"}], "/", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"sigma", "^", "2"}], "+", 
         RowBox[{"theta", "^", "2"}]}], ")"}], "^", "1.5"}]}], "\[Equal]", 
     RowBox[{"Skewness", "[", 
      RowBox[{"Dgbpusdr", "*", "100"}], "]"}]}], "&&", 
    RowBox[{"sigma", ">", "0"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"m", ",", "theta", ",", "sigma"}], "}"}], ",", "Reals"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"NSolve", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"m", "+", "theta"}], "\[Equal]", 
     RowBox[{"Mean", "[", 
      RowBox[{"Deurusdr", "*", "100"}], "]"}]}], "&&", 
    RowBox[{
     RowBox[{
      RowBox[{"sigma", "^", "2"}], "+", 
      RowBox[{"theta", "^", "2"}]}], "\[Equal]", 
     RowBox[{"Variance", "[", 
      RowBox[{"Deurusdr", "*", "100"}], "]"}]}], "&&", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"2", "*", 
         RowBox[{"theta", "^", "3"}]}], "+", 
        RowBox[{"3", 
         RowBox[{"sigma", "^", "2"}], "*", "theta"}]}], ")"}], "/", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"sigma", "^", "2"}], "+", 
         RowBox[{"theta", "^", "2"}]}], ")"}], "^", "1.5"}]}], "\[Equal]", 
     RowBox[{"Skewness", "[", 
      RowBox[{"Deurusdr", "*", "100"}], "]"}]}], "&&", 
    RowBox[{"sigma", ">", "0"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"m", ",", "theta", ",", "sigma"}], "}"}], ",", "Reals"}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.744406569212863*^9, 
  3.744406615400064*^9}},ExpressionUUID->"ebe21e65-8f4d-4a9b-90c4-\
5e26c3691c71"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"theta", "\[Rule]", "0.001749276614020261`"}], ",", 
    RowBox[{"sigma", "\[Rule]", "0.020934433709315484`"}], ",", 
    RowBox[{"m", "\[Rule]", 
     RowBox[{"-", "0.0009193867469525652`"}]}]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{{3.744406592669016*^9, 3.7444066171291103`*^9}, {
   3.744408198482442*^9, 3.7444082035490103`*^9}, 3.744408553219872*^9, 
   3.744484123412058*^9, 3.744484253690889*^9, 3.744484392803801*^9, 
   3.744484461278604*^9, 3.744484729914254*^9, 3.744485019449053*^9, 
   3.7444854047857313`*^9, {3.744485659014606*^9, 3.7444856612298822`*^9}, 
   3.7444858933404493`*^9, 3.744486108722492*^9, 3.744486278441296*^9, 
   3.744657374392028*^9},ExpressionUUID->"de63d9c8-939f-47b8-8860-\
d41e24bb4681"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"theta", "\[Rule]", "0.001277566207101511`"}], ",", 
    RowBox[{"sigma", "\[Rule]", "0.011239646926482941`"}], ",", 
    RowBox[{"m", "\[Rule]", 
     RowBox[{"-", "0.001022283257626045`"}]}]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{{3.744406592669016*^9, 3.7444066171291103`*^9}, {
   3.744408198482442*^9, 3.7444082035490103`*^9}, 3.744408553219872*^9, 
   3.744484123412058*^9, 3.744484253690889*^9, 3.744484392803801*^9, 
   3.744484461278604*^9, 3.744484729914254*^9, 3.744485019449053*^9, 
   3.7444854047857313`*^9, {3.744485659014606*^9, 3.7444856612298822`*^9}, 
   3.7444858933404493`*^9, 3.744486108722492*^9, 3.744486278441296*^9, 
   3.7446573744310703`*^9},ExpressionUUID->"bc99e148-2996-447e-b072-\
b3e41392114c"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   SubscriptBox["\[Theta]", "1"], "=", "0.001749276614020261`"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   SubscriptBox["m", "1"], "=", 
   RowBox[{"-", "0.0009193867469525652`"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   SubscriptBox["\[Sigma]", "1"], "=", "0.020934433709315484`"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   SubscriptBox["\[Theta]", "2"], "=", "0.001277566207101511`"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   SubscriptBox["m", "2"], "=", 
   RowBox[{"-", "0.001022283257626045`"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   SubscriptBox["\[Sigma]", "2"], "=", "0.011239646926482941`"}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.7444066390823183`*^9, 3.744406680298411*^9}, {
  3.744408209024262*^9, 3.744408247093865*^9}, {3.744408560190246*^9, 
  3.744408591308465*^9}, {3.744484132067523*^9, 3.744484165058558*^9}, {
  3.74448426040442*^9, 3.744484300235052*^9}, {3.744484399885141*^9, 
  3.744484430075891*^9}, {3.744484738366632*^9, 3.744484763972373*^9}, {
  3.744485028263217*^9, 3.74448505111692*^9}, {3.744485413944538*^9, 
  3.744485462582511*^9}, {3.744485671428443*^9, 3.744485700761567*^9}, {
  3.744485900616791*^9, 3.744485937967433*^9}, {3.7444861162403793`*^9, 
  3.744486152751061*^9}, {3.744486285780278*^9, 
  3.744486310381131*^9}},ExpressionUUID->"3853a16d-7510-4633-8a0a-\
eacb33eea236"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"F", "=", 
  RowBox[{
   RowBox[{"Function", "[", 
    RowBox[{"x", ",", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"2", "*", 
          RowBox[{"Exp", "[", 
           RowBox[{
            SubscriptBox["\[Theta]", "1"], "*", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"x", "-", 
               SubscriptBox["m", "1"]}], ")"}], "/", 
             RowBox[{
              SubscriptBox["\[Sigma]", "1"], "^", "2"}]}]}], "]"}]}], ")"}], 
        "/", 
        RowBox[{"(", 
         RowBox[{
          SubscriptBox["\[Sigma]", "1"], "*", 
          RowBox[{"Sqrt", "[", 
           RowBox[{"2", "*", "Pi"}], "]"}], "*", 
          RowBox[{"Gamma", "[", "1", "]"}]}], ")"}]}], ")"}], "*", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{"x", "-", 
            SubscriptBox["m", "1"]}], ")"}], "^", "2"}], "/", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"2", "*", 
            RowBox[{
             SubscriptBox["\[Sigma]", "1"], "^", "2"}]}], "+", 
           RowBox[{
            SubscriptBox["\[Theta]", "1"], "^", "2"}]}], ")"}]}], ")"}], "^", 
       "0.25"}], "*", 
      RowBox[{"BesselK", "[", 
       RowBox[{"0.5", ",", 
        RowBox[{
         RowBox[{"Sqrt", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{"x", "-", 
              SubscriptBox["m", "1"]}], ")"}], "^", "2"}], "*", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"2", "*", 
              RowBox[{
               SubscriptBox["\[Sigma]", "1"], "^", "2"}]}], "+", 
             RowBox[{
              SubscriptBox["\[Theta]", "1"], "^", "2"}]}], ")"}]}], "]"}], 
         "/", 
         RowBox[{
          SubscriptBox["\[Sigma]", "1"], "^", "2"}]}]}], "]"}]}]}], "]"}], 
   "[", "x", "]"}]}]], "Input",ExpressionUUID->"caf17fdb-d65d-4e15-b9e8-\
449d5efe42f9"],

Cell[BoxData[
 RowBox[{"33.718404651118306`", " ", 
  SuperscriptBox["\[ExponentialE]", 
   RowBox[{
    RowBox[{"3.9914992800386457`", " ", 
     RowBox[{"(", 
      RowBox[{"0.0009193867469525652`", "\[VeryThinSpace]", "+", "x"}], 
      ")"}]}], "-", 
    RowBox[{"67.67223917270223`", " ", 
     SqrtBox[
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"0.0009193867469525652`", "\[VeryThinSpace]", "+", "x"}], 
        ")"}], "2"]]}]}]], " ", 
  RowBox[{"(", 
   RowBox[{"1", "+", 
    FractionBox["0.`", 
     SqrtBox[
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"0.0009193867469525652`", "\[VeryThinSpace]", "+", "x"}], 
        ")"}], "2"]]]}], ")"}]}]], "Output",
 CellChangeTimes->{
  3.744406694842101*^9, 3.744408253965542*^9, {3.744408595459593*^9, 
   3.744408604548337*^9}, 3.74448417007017*^9, 3.7444843054438972`*^9, 
   3.744484434737558*^9, 3.744484484431065*^9, 3.744484767713195*^9, 
   3.744485054834536*^9, 3.744485466757516*^9, 3.744485704640687*^9, 
   3.7444859419277277`*^9, 3.744486177643939*^9, 3.744486314092881*^9, 
   3.7446573783317413`*^9},ExpressionUUID->"8321975c-ae35-4989-8377-\
2f90063a667a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{"Histogram", "[", 
    RowBox[{
     RowBox[{"Dgbpusdr", "*", "100"}], ",", "Automatic", ",", 
     "\"\<ProbabilityDensity\>\""}], "]"}], ",", 
   RowBox[{"Plot", "[", 
    RowBox[{"F", ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"-", "0.2"}], ",", "0.2"}], "}"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Full", ",", "Full"}], "}"}]}]}], "]"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"All", ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "60"}], "}"}]}], "}"}]}], ",", 
   RowBox[{"PlotLabel", "\[Rule]", "\"\<GBP/USDr%\>\""}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7444067124897327`*^9, 3.744406863370606*^9}, 
   3.744406918906857*^9, {3.7444073900751467`*^9, 3.7444073935049963`*^9}, {
   3.74440826000546*^9, 3.744408266907682*^9}, {3.744408622595323*^9, 
   3.744408622945283*^9}},ExpressionUUID->"1e237331-6b55-43b9-9028-\
e3d4edfca275"],

Cell[BoxData[
 GraphicsBox[{{
    {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], EdgeForm[{
     Opacity[0.644], Thickness[Small]}], {}, 
     {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], EdgeForm[{
      Opacity[0.644], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{-0.06, 0}, {-0.04, 2.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{129.23571677396325`, 146.80510488452944`}, {
           96.8216468306022, 104.13484077343537`}}],
         StatusArea[#, 2]& ,
         TagBoxNote->"2"],
        StyleBox["2", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[2, {}], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{-0.04, 0}, {-0.02, 2.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{146.30510488452944`, 163.87449299509564`}, {
           96.8216468306022, 104.13484077343537`}}],
         StatusArea[#, 2]& ,
         TagBoxNote->"2"],
        StyleBox["2", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[2, {}], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{-0.02, 0}, {0., 28.}, "RoundingRadius" -> 0]},
          ImageSizeCache->{{163.37449299509564`, 180.9438811056618}, {
           8.250125573771115, 104.13484077343537`}}],
         StatusArea[#, 28]& ,
         TagBoxNote->"28"],
        StyleBox["28", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[28, {}], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{0., 0}, {0.02, 8.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{180.4438811056618, 198.01326921622797`}, {
           76.38206500210273, 104.13484077343537`}}],
         StatusArea[#, 8]& ,
         TagBoxNote->"8"],
        StyleBox["8", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[8, {}], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{0.02, 0}, {0.04, 8.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{197.51326921622797`, 215.08265732679416`}, {
           76.38206500210273, 104.13484077343537`}}],
         StatusArea[#, 8]& ,
         TagBoxNote->"8"],
        StyleBox["8", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[8, {}], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{0.04, 0}, {0.06, 2.}, "RoundingRadius" -> 0]},
          ImageSizeCache->{{214.58265732679416`, 232.15204543736036`}, {
           96.8216468306022, 104.13484077343537`}}],
         StatusArea[#, 2]& ,
         TagBoxNote->"2"],
        StyleBox["2", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[2, {}], 
        "Tooltip"]& ]}, {}, {}}, {{}, {}, {}, {}, {}, {}}}, {{{{}, {}, 
      TagBox[
       {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
        Opacity[1.], LineBox[CompressedData["
1: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
iCACTaQnjgoboHjIR6micoL4P7tcoLk=
         "]], LineBox[CompressedData["
1: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
T5y8vQf/A97E+90=
         "]]},
       Annotation[#, 
        "Charting`Private`Tag$2099464#1"]& ], {}}, {{}, {}, {}}}, {}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{-0.0624, 0},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  PlotLabel->FormBox["\"GBP/USDr%\"", TraditionalForm],
  PlotRange->{All, {0, 60}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.744406715306079*^9, 3.744406863904097*^9}, 
   3.744407395367528*^9, {3.7444082563345823`*^9, 3.744408267495748*^9}, {
   3.744408606707858*^9, 3.74440862352227*^9}, 3.744484171958856*^9, 
   3.744484307212275*^9, 3.744484436485258*^9, 3.744484486263213*^9, 
   3.744484769776782*^9, 3.7444850567548523`*^9, 3.7444854684133997`*^9, 
   3.744485706629636*^9, 3.74448594374561*^9, 3.744486179732853*^9, 
   3.744486316207674*^9, 
   3.7446573801628*^9},ExpressionUUID->"aed77733-a33d-4ed8-8c40-92fbbcab3e95"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"G", "=", 
  RowBox[{
   RowBox[{"Function", "[", 
    RowBox[{"x", ",", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"2", "*", 
          RowBox[{"Exp", "[", 
           RowBox[{
            RowBox[{"(", 
             SubscriptBox["\[Theta]", "2"], ")"}], "*", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"x", "-", 
               SubscriptBox["m", "2"]}], ")"}], "/", 
             RowBox[{
              SubscriptBox["\[Sigma]", "2"], "^", "2"}]}]}], "]"}]}], ")"}], 
        "/", 
        RowBox[{"(", 
         RowBox[{
          SubscriptBox["\[Sigma]", "2"], "*", 
          RowBox[{"Sqrt", "[", 
           RowBox[{"2", "*", "Pi"}], "]"}], "*", 
          RowBox[{"Gamma", "[", "1", "]"}]}], ")"}]}], ")"}], "*", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{"x", "-", 
            SubscriptBox["m", "2"]}], ")"}], "^", "2"}], "/", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"2", "*", 
            RowBox[{
             SubscriptBox["\[Sigma]", "2"], "^", "2"}]}], "+", 
           RowBox[{
            SubscriptBox["\[Theta]", "2"], "^", "2"}]}], ")"}]}], ")"}], "^", 
       "0.25"}], "*", 
      RowBox[{"BesselK", "[", 
       RowBox[{"0.5", ",", 
        RowBox[{
         RowBox[{"Sqrt", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{"x", "-", 
              SubscriptBox["m", "2"]}], ")"}], "^", "2"}], "*", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"2", "*", 
              RowBox[{
               SubscriptBox["\[Sigma]", "2"], "^", "2"}]}], "+", 
             RowBox[{
              SubscriptBox["\[Theta]", "2"], "^", "2"}]}], ")"}]}], "]"}], 
         "/", 
         RowBox[{
          SubscriptBox["\[Sigma]", "2"], "^", "2"}]}]}], "]"}]}]}], "]"}], 
   "[", "x", "]"}]}]], "Input",ExpressionUUID->"8553a8a6-cddd-4ba7-8e9c-\
3523d5773556"],

Cell[BoxData[
 RowBox[{"62.70960669236289`", " ", 
  SuperscriptBox["\[ExponentialE]", 
   RowBox[{
    RowBox[{"10.11295507673382`", " ", 
     RowBox[{"(", 
      RowBox[{"0.001022283257626045`", "\[VeryThinSpace]", "+", "x"}], 
      ")"}]}], "-", 
    RowBox[{"126.22941960057982`", " ", 
     SqrtBox[
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"0.001022283257626045`", "\[VeryThinSpace]", "+", "x"}], 
        ")"}], "2"]]}]}]], " ", 
  RowBox[{"(", 
   RowBox[{"1", "+", 
    FractionBox["0.`", 
     SqrtBox[
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"0.001022283257626045`", "\[VeryThinSpace]", "+", "x"}], 
        ")"}], "2"]]]}], ")"}]}]], "Output",
 CellChangeTimes->{3.744406888462735*^9, 3.74440827448837*^9, 
  3.7444086110119343`*^9, 3.744484175300118*^9, 3.7444843107653913`*^9, 
  3.744484440447081*^9, 3.744484488381115*^9, 3.744484771979517*^9, 
  3.744485059623495*^9, 3.744485471588571*^9, 3.7444857092549973`*^9, 
  3.744485947425391*^9, 3.74448618213708*^9, 3.7444863192603617`*^9, 
  3.744657382446486*^9},ExpressionUUID->"eae46224-6222-48c8-af10-\
c8b7829598bc"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{"Histogram", "[", 
    RowBox[{
     RowBox[{"Deurusdr", "*", "100"}], ",", "Automatic", ",", 
     "\"\<ProbabilityDensity\>\""}], "]"}], ",", 
   RowBox[{"Plot", "[", 
    RowBox[{"G", ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"-", "0.2"}], ",", "0.2"}], "}"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Full", ",", "Full"}], "}"}]}]}], "]"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"All", ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "60"}], "}"}]}], "}"}]}], ",", 
   RowBox[{"PlotLabel", "\[Rule]", "\"\<EUR/USDr%\>\""}]}], "]"}]], "Input",
 CellChangeTimes->{{3.74440690276926*^9, 3.7444069069359293`*^9}, {
  3.7444069392176447`*^9, 3.7444069573667088`*^9}, {3.7444073407486353`*^9, 
  3.744407372073495*^9}, {3.744408280299325*^9, 3.744408280482551*^9}, {
  3.744408616971979*^9, 
  3.744408618553729*^9}},ExpressionUUID->"64024ed7-9d7a-4eba-871b-\
7e950b0a288b"],

Cell[BoxData[
 GraphicsBox[{{
    {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], EdgeForm[{
     Opacity[0.651], Thickness[Small]}], {}, 
     {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], EdgeForm[{
      Opacity[0.651], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{-0.02, 0}, {-0.01, 12.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{163.37449299509564`, 172.4091870503787}, {
           62.7556771164364, 104.13484077343537`}}],
         StatusArea[#, 12]& ,
         TagBoxNote->"12"],
        StyleBox["12", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[12, {}], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{-0.01, 0}, {0., 28.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{171.9091870503787, 180.9438811056618}, {
           8.250125573771115, 104.13484077343537`}}],
         StatusArea[#, 28]& ,
         TagBoxNote->"28"],
        StyleBox["28", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[28, {}], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{0., 0}, {0.01, 44.}, "RoundingRadius" -> 0]},
          ImageSizeCache->{{180.4438811056618, 
           189.4785751609449}, {-46.25542596889417, 104.13484077343537`}}],
         StatusArea[#, 44]& ,
         TagBoxNote->"44"],
        StyleBox["44", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[44, {}], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{0.01, 0}, {0.02, 12.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{188.9785751609449, 198.01326921622797`}, {
           62.7556771164364, 104.13484077343537`}}],
         StatusArea[#, 12]& ,
         TagBoxNote->"12"],
        StyleBox["12", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[12, {}], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{0.02, 0}, {0.03, 4.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{197.51326921622797`, 206.54796327151107`}, {
           90.00845288776905, 104.13484077343537`}}],
         StatusArea[#, 4]& ,
         TagBoxNote->"4"],
        StyleBox["4", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[4, {}], 
        "Tooltip"]& ]}, {}, {}}, {{}, {}, {}, {}, {}}}, {{{{}, {}, 
      TagBox[
       {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
        Opacity[1.], LineBox[CompressedData["
1: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
fjSAiwXBk87vzhD/A0aOd0k=
         "]], LineBox[CompressedData["
1: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

         "]]},
       Annotation[#, 
        "Charting`Private`Tag$2099562#1"]& ], {}}, {{}, {}, {}}}, {}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{-0.021, 0},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  PlotLabel->FormBox["\"EUR/USDr%\"", TraditionalForm],
  PlotRange->{All, {0, 60}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.7444069532693357`*^9, 3.7444069579498663`*^9}, 
   3.7444070583788853`*^9, 3.744407375460417*^9, {3.744408277351781*^9, 
   3.744408280880342*^9}, {3.744408613369076*^9, 3.74440861946192*^9}, 
   3.744484177292935*^9, 3.7444843126793203`*^9, 3.7444844424988327`*^9, 
   3.744484490312023*^9, 3.744484774211566*^9, 3.744485061661035*^9, 
   3.744485473585444*^9, 3.74448571121984*^9, 3.744485949241683*^9, 
   3.744486184373013*^9, 3.744486321355503*^9, 
   3.744657384372324*^9},ExpressionUUID->"a73a8a64-8267-421b-abe7-\
53a4e5cf3b37"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[ScriptCapitalD]1", "=", 
   RowBox[{"ProbabilityDistribution", "[", 
    RowBox[{"F", ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"-", "Infinity"}], ",", "Infinity"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"DistributionFitTest", "[", 
  RowBox[{
   RowBox[{"Dgbpusdr", "*", "100"}], ",", "\[ScriptCapitalD]1", ",", 
   "\"\<PearsonChiSquare\>\""}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[ScriptCapitalD]2", "=", 
   RowBox[{"ProbabilityDistribution", "[", 
    RowBox[{"G", ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"-", "Infinity"}], ",", "Infinity"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"DistributionFitTest", "[", 
  RowBox[{
   RowBox[{"Deurusdr", "*", "100"}], ",", "\[ScriptCapitalD]2", ",", 
   "\"\<PearsonChiSquare\>\""}], "]"}]}], "Input",
 CellChangeTimes->{{3.744406990391388*^9, 
  3.74440700284478*^9}},ExpressionUUID->"fccf08e7-43c7-4306-b9de-\
410bbbd69863"],

Cell[BoxData["0.235881292986492`"], "Output",
 CellChangeTimes->{3.74440700583574*^9, 3.744407061677011*^9, 
  3.744408288737008*^9, 3.7444086307245197`*^9, 3.74448418091775*^9, 
  3.744484315468339*^9, 3.744484445651577*^9, 3.7444844968922157`*^9, 
  3.7444847771811447`*^9, 3.744485064998355*^9, 3.744485477062983*^9, 
  3.7444857136555357`*^9, 3.7444859520497913`*^9, 3.7444861872098618`*^9, 
  3.744486324253915*^9, 
  3.7446573873148937`*^9},ExpressionUUID->"e2d6435e-05d1-4773-957d-\
731b29a15b63"],

Cell[BoxData["0.07018303055078065`"], "Output",
 CellChangeTimes->{3.74440700583574*^9, 3.744407061677011*^9, 
  3.744408288737008*^9, 3.7444086307245197`*^9, 3.74448418091775*^9, 
  3.744484315468339*^9, 3.744484445651577*^9, 3.7444844968922157`*^9, 
  3.7444847771811447`*^9, 3.744485064998355*^9, 3.744485477062983*^9, 
  3.7444857136555357`*^9, 3.7444859520497913`*^9, 3.7444861872098618`*^9, 
  3.744486324253915*^9, 
  3.744657387325336*^9},ExpressionUUID->"51620196-2097-42a0-ad06-\
665947a739cf"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"R12", "=", 
   RowBox[{"Sin", "[", 
    RowBox[{"Pi", "*", 
     RowBox[{
      RowBox[{"KendallTau", "[", 
       RowBox[{
        RowBox[{"Dgbpusdr", "*", "100"}], ",", 
        RowBox[{"Deurusdr", "*", "100"}]}], "]"}], "/", "2"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"R", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "R12"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"R12", ",", "1"}], "}"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"MatrixForm", "[", "R", "]"}]}], "Input",
 CellChangeTimes->{{3.7444864410286016`*^9, 
  3.744486460544669*^9}},ExpressionUUID->"bb9fe33c-07c0-480f-823b-\
5afcbcb00b03"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"1", "0.7312322877737879`"},
     {"0.7312322877737879`", "1"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.7444864633118687`*^9, 
  3.744657389634004*^9},ExpressionUUID->"ac631439-6d33-4f74-bb58-\
2d8182dd2c89"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"L1", "=", 
   RowBox[{"Dgbpusdr", "*", "100"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"L2", "=", 
   RowBox[{"Deurusdr", "*", "100"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.744486533751305*^9, 
  3.7444865471295347`*^9}},ExpressionUUID->"ccb00112-bfa9-4f55-8ff4-\
afc8c7c2aced"],

Cell[BoxData[
 RowBox[{
  RowBox[{"data", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"L1", "[", 
        RowBox[{"[", "i", "]"}], "]"}], ",", 
       RowBox[{"L2", "[", 
        RowBox[{"[", "i", "]"}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", "25"}], "}"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7420858183051167`*^9, 3.7420858228858833`*^9}, {
  3.744486472050232*^9, 
  3.744486558272311*^9}},ExpressionUUID->"26481e59-396e-4177-8734-\
d771bf1d8a76"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"EstimatedDistribution", "[", 
  RowBox[{"data", ",", 
   RowBox[{"CopulaDistribution", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\"\<MultivariateT\>\"", ",", "R", ",", "v"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"StudentTDistribution", "[", "v", "]"}], ",", 
       RowBox[{"StudentTDistribution", "[", "v", "]"}]}], "}"}]}], "]"}], ",", 
   RowBox[{"ParameterEstimator", "\[Rule]", "\"\<MaximumLikelihood\>\""}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.742086679707159*^9, 3.742086701167405*^9}, {
  3.7420867396841*^9, 
  3.742086765519001*^9}},ExpressionUUID->"f0dc3d85-3963-42b3-a9f3-\
5d5109caa895"],

Cell[BoxData[
 RowBox[{"CopulaDistribution", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\<\"MultivariateT\"\>", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1", ",", "0.7312322877737879`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0.7312322877737879`", ",", "1"}], "}"}]}], "}"}], ",", 
     "798.530970848029`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"StudentTDistribution", "[", "798.530970848029`", "]"}], ",", 
     RowBox[{"StudentTDistribution", "[", "798.530970848029`", "]"}]}], 
    "}"}]}], "]"}]], "Output",
 CellChangeTimes->{
  3.742086642009528*^9, {3.742086701780793*^9, 3.742086704901959*^9}, {
   3.742086750985897*^9, 3.74208676914282*^9}, 3.744017611540633*^9, {
   3.744486567486064*^9, 3.744486596719439*^9}, 
   3.7446573954263973`*^9},ExpressionUUID->"7119ae18-40a6-4527-b990-\
bcfa153ae614"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   StyleBox["\[Nu]", "TR"], 
   StyleBox["=", "TR"], "1200.4613327688985`"}], ";"}]], "Input",
 CellChangeTimes->{{3.74208619208001*^9, 3.7420861974638243`*^9}, 
   3.742086711488941*^9, 3.742086774608551*^9, 
   3.744486575945786*^9},ExpressionUUID->"8d546570-8365-4d43-ae8c-\
9621335a31f6"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"A", "=", 
   RowBox[{"CholeskyDecomposition", "[", "R", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dist", "=", 
   RowBox[{"ProductDistribution", "[", 
    RowBox[{
     RowBox[{"NormalDistribution", "[", "]"}], ",", 
     RowBox[{"NormalDistribution", "[", "]"}], ",", 
     RowBox[{"ChiSquareDistribution", "[", 
      StyleBox["\[Nu]", "TR"], "]"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"z1", "=", 
   RowBox[{"RandomVariate", "[", 
    RowBox[{
     RowBox[{"MarginalDistribution", "[", 
      RowBox[{"dist", ",", "1"}], "]"}], ",", "25"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"z2", "=", 
   RowBox[{"RandomVariate", "[", 
    RowBox[{
     RowBox[{"MarginalDistribution", "[", 
      RowBox[{"dist", ",", "2"}], "]"}], ",", "25"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"s", "=", 
   RowBox[{"RandomVariate", "[", 
    RowBox[{
     RowBox[{"MarginalDistribution", "[", 
      RowBox[{"dist", ",", "3"}], "]"}], ",", "25"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"For", "[", 
   RowBox[{
    RowBox[{"i", "=", "1"}], ",", 
    RowBox[{"i", "\[LessEqual]", "25"}], ",", 
    RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      SubscriptBox["s", "i"], "=", 
      RowBox[{"s", "[", 
       RowBox[{"[", "i", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      SubscriptBox["y", "i"], "=", 
      RowBox[{"A", ".", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"z1", "[", 
          RowBox[{"[", "i", "]"}], "]"}], ",", 
         RowBox[{"z2", "[", 
          RowBox[{"[", "i", "]"}], "]"}]}], "}"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{
      SubscriptBox["x", "i"], "=", 
      RowBox[{
       RowBox[{
        RowBox[{"Sqrt", "[", 
         StyleBox["\[Nu]", "TR"], "]"}], "/", 
        RowBox[{"Sqrt", "[", 
         SubscriptBox["s", "i"], "]"}]}], "*", 
       SubscriptBox["y", "i"]}]}]}]}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"x1", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      SubscriptBox["x", "i"], "[", 
      RowBox[{"[", "1", "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "25"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"x2", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      SubscriptBox["x", "i"], "[", 
      RowBox[{"[", "2", "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "25"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   SubscriptBox["u", "1"], "=", 
   RowBox[{"CDF", "[", 
    RowBox[{
     RowBox[{"StudentTDistribution", "[", 
      StyleBox["\[Nu]", "TR"], "]"}], ",", "x1"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   SubscriptBox["u", "2"], "=", 
   RowBox[{"CDF", "[", 
    RowBox[{
     RowBox[{"StudentTDistribution", "[", 
      StyleBox["\[Nu]", "TR"], "]"}], ",", "x2"}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.742086220705748*^9, 3.7420862385186357`*^9}, {
  3.7444866051176043`*^9, 
  3.7444866267088327`*^9}},ExpressionUUID->"bb05ed49-1436-4264-8d3c-\
565399db9b13"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   SubscriptBox["Sim1", "0"], "=", 
   RowBox[{
    RowBox[{"Take", "[", 
     RowBox[{
      RowBox[{"Drop", "[", 
       RowBox[{"gbpusd", ",", "7"}], "]"}], ",", "1"}], "]"}], "[", 
    RowBox[{"[", "1", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   SubscriptBox["Sim2", "0"], "=", 
   RowBox[{
    RowBox[{"Take", "[", 
     RowBox[{
      RowBox[{"Drop", "[", 
       RowBox[{"eurusd", ",", "7"}], "]"}], ",", "1"}], "]"}], "[", 
    RowBox[{"[", "1", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"S1", "=", 
   RowBox[{"Take", "[", 
    RowBox[{
     RowBox[{"Drop", "[", 
      RowBox[{"gbpusd", ",", "8"}], "]"}], ",", "25"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"S2", "=", 
   RowBox[{"Take", "[", 
    RowBox[{
     RowBox[{"Drop", "[", 
      RowBox[{"eurusd", ",", "8"}], "]"}], ",", "25"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dates", "=", 
   RowBox[{"Take", "[", 
    RowBox[{
     RowBox[{"Drop", "[", 
      RowBox[{"date", ",", "8"}], "]"}], ",", "25"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   SubscriptBox["L", "1"], "=", 
   RowBox[{"InverseCDF", "[", 
    RowBox[{"\[ScriptCapitalD]1", ",", 
     SubscriptBox["u", "1"]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   SubscriptBox["L", "2"], "=", 
   RowBox[{"InverseCDF", "[", 
    RowBox[{"\[ScriptCapitalD]2", ",", 
     SubscriptBox["u", "2"]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"For", "[", 
   RowBox[{
    RowBox[{"t", "=", "1"}], ",", 
    RowBox[{"t", "\[LessEqual]", "25"}], ",", 
    RowBox[{"t", "++"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      SubscriptBox["L", 
       RowBox[{"1", ",", "t"}]], "=", 
      RowBox[{
       SubscriptBox["L", "1"], "[", 
       RowBox[{"[", "t", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      SubscriptBox["L", 
       RowBox[{"2", ",", "t"}]], "=", 
      RowBox[{
       SubscriptBox["L", "2"], "[", 
       RowBox[{"[", "t", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      SubscriptBox["Sim1", "t"], "=", 
      RowBox[{
       SubscriptBox["Sim1", 
        RowBox[{"t", "-", "1"}]], "*", 
       RowBox[{"Exp", "[", 
        RowBox[{
         RowBox[{"mMAgbpusdr", "[", 
          RowBox[{"[", "t", "]"}], "]"}], "+", 
         RowBox[{
          SubscriptBox["L", 
           RowBox[{"1", ",", "t"}]], "/", "100"}]}], "]"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{
      SubscriptBox["Sim2", "t"], "=", 
      RowBox[{
       SubscriptBox["Sim2", 
        RowBox[{"t", "-", "1"}]], "*", 
       RowBox[{"Exp", "[", 
        RowBox[{
         RowBox[{"mMAeurusdr", "[", 
          RowBox[{"[", "t", "]"}], "]"}], "+", 
         RowBox[{
          SubscriptBox["L", 
           RowBox[{"2", ",", "t"}]], "/", "100"}]}], "]"}]}]}]}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Sm1", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"dates", "[", 
        RowBox[{"[", "t", "]"}], "]"}], ",", 
       SubscriptBox["Sim1", "t"]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "1", ",", "25"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Sm2", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"dates", "[", 
        RowBox[{"[", "t", "]"}], "]"}], ",", 
       SubscriptBox["Sim2", "t"]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "1", ",", "25"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"DateListPlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"Sm1", ",", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"dates", "[", 
          RowBox[{"[", "t", "]"}], "]"}], ",", 
         RowBox[{"S1", "[", 
          RowBox[{"[", "t", "]"}], "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"t", ",", "1", ",", "25"}], "}"}]}], "]"}]}], "}"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"Placed", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"\"\<sim tick GBPUSD\>\"", ",", "\"\<GBPUSD\>\""}], "}"}], ",",
       "Above"}], "]"}]}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"DateListPlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"Sm2", ",", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"dates", "[", 
          RowBox[{"[", "t", "]"}], "]"}], ",", 
         RowBox[{"S2", "[", 
          RowBox[{"[", "t", "]"}], "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"t", ",", "1", ",", "25"}], "}"}]}], "]"}]}], "}"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"Placed", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"\"\<sim tick EURUSD\>\"", ",", "\"\<EURUSD\>\""}], "}"}], ",",
       "Above"}], "]"}]}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.7444871966385183`*^9, 3.744487300098472*^9}, {
  3.744487344676508*^9, 3.74448734596325*^9}, {3.7444875817146387`*^9, 
  3.744487592743308*^9}, {3.744657336090427*^9, 3.744657345560815*^9}, {
  3.744657515300283*^9, 3.744657524769824*^9}, {3.7465315192990227`*^9, 
  3.74653152352876*^9}, {3.746531561875523*^9, 
  3.746531562291439*^9}},ExpressionUUID->"1fac96b2-2f67-4e0e-800d-\
2aa469132c36"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.011000000000000001`], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJxTTMoPSmViYGCQBGIQzcCgYHf47mvHRdM0ThaZf7VnYFgQCeILa5w8rA7m
K5SC+Mqri8U+QOQngPj80ntLjczA8mtA/Oe+X+oYwPwFx0H8g6GC8awQ+ccg
fvmkGutiU7D8PxA/ffOjfmsTsLzUESA/P30yawxE3hTE//VC77EmmK8QCOLX
WJi2BUHMzwHx+WXjoqwh8h0gvizvOtP3hmD5xSB+99dTkieNwPL7QXyhyUdV
joH5C26B+Kejdn8MMgbLfwPxfTn2/poDkRc8CuRL/VGTK4Lo1wXxd8dlfX+l
DZb3APF/d5wUng/mK6SA+MvP+fnz64Dl60H8PUsnSR+GyM8G8d2cvrUWQ/Rv
A/GzP8n8FgWrV7gE4j+x6n2wVOurPQBx+r0F
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.011000000000000001`], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJxTTMoPSmViYGCQBGIQzcCgYHf47mtHXWeZ14/MvtozMCyIBPG9X7GYCIL5
CqUgPv8c40VbzMHyE1DVK6wB8fdMm8BfBdF/HMSf9375MW+weoXHaOb/QzNf
6giQf9O2MmKFKVje9Aiq+YFHUM3POYKqvwNN/2JU9Qr7UdUvuIUm/w3EF+3x
AqoAywseBfKX3N/HN8cYLK97FFW/B5p8CohvDAZg+XoQ//uTxIXXwOYpzD6K
av42VPUKl5D5AODbtsg=
         "]]}}}, {}, {}, {}, {}}, {
    DisplayFunction -> Identity, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, AxesOrigin -> {3.740146161*^9, 1.3227498689914956`}, 
     PlotRange -> {{3.740146161*^9, 3.740151441*^9}, {1.3229120990324015`, 
      1.3261566998505223`}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, False}, 
     AxesLabel -> {None, None}, 
     AxesOrigin -> {3.740146161*^9, 1.3227498689914956`}, DisplayFunction :> 
     Identity, Frame -> {{True, True}, {True, True}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Charting`FindScaledTicks[
         (Charting`getDateTicks[Automatic, {Automatic}, 
          (Map[DateList, {
            SlotSequence[1]}]& )[
           SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
          Automatic]& )[
          SlotSequence[1]], {Identity, Identity}]& , Charting`ScaledFrameTicks[
         (Charting`getDateTicks[
         Charting`getDateTicks[Automatic, {Automatic}, 
           (Map[DateList, {
             SlotSequence[1]}]& )[
            SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
           Automatic]& , {Automatic}, 
          (Map[DateList, {
            SlotSequence[1]}]& )[
           SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, None]& )[
          SlotSequence[1]], {Identity, Identity}]& }}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{3.740146161*^9, 3.740151441*^9}, {1.3229120990324015`, 
      1.3261566998505223`}}, PlotRangeClipping -> True, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, Ticks -> {{}, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"sim GBPUSD\"", "\"GBPUSD\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.198], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.198], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.198], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.198], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxDividers -> {"Columns" -> {{None}}, "Rows" -> {{None}}}, 
             GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
             GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.011000000000000001`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.011000000000000001`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"True", ",", "True"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}, {
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {2, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "Above"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.7444872492989264`*^9, 3.744487278471314*^9}, {
   3.744487350494973*^9, 3.74448738298962*^9}, {3.7444874654153223`*^9, 
   3.744487481017644*^9}, {3.7444875843660717`*^9, 3.744487595320158*^9}, 
   3.744657348734392*^9, 
   3.744657412682663*^9},ExpressionUUID->"0be8447f-d4aa-4789-8544-\
cdc3e4ad1575"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.011000000000000001`], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJxTTMoPSmViYGCQBGIQzcCgYHf47mtH7fA3NonnPtkzMCyIBPGreHIFQsF8
hVIQf342j6wzRH4CiC96q22DP0R+DYhv7rpyljlE/jiIL7Xo5Sqo/scgvkCQ
0ywGiPw/EH9h+qrM/LNgeakjQP6u5t5z88D8BaYgPlvnn0lvIfKBIP651Rsc
5SD6c0B8gb8XLzyEyHeA+BqrVskfgehfDOK7rbvyWANi/34Qvztz1WMZiP5b
IL655pk0eYj8NxA/Y+HPmV8g+gWPAvmTpda23YeYrwviF3lvzJKFyHuA+HMu
WfdzQeRTQPx+9ocbHpwBy9eD+MumXyydDuYrzAbxReoyfthC5LeB+DKlM5e0
Q+QvgfgfuoTFRYB8AN8HzGo=
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.011000000000000001`], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJxTTMoPSmViYGCQBGIQzcCgYHf47mvH9apPmued/WTPwLAgEsS3q4xYYQrm
K5SC+BPrflsVnAPLTwDxFS7lx7OD+Qpr0PQfR1Wv8BhN/h8qX0HqCIp9C0yP
oJofeARVfw4qX6EDTX4xmvx+NPlbaPLf0OwXPIrqf92jqPo9QPyzZ0AALJ8C
4scoOH5MBvMX1KPpn43KX7ANTf8lZP0AzhjP6Q==
         "]]}}}, {}, {}, {}, {}}, {
    DisplayFunction -> Identity, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, AxesOrigin -> {3.740146161*^9, 1.1747950393000084`}, 
     PlotRange -> {{3.740146161*^9, 3.740151441*^9}, {1.174823846952389, 
      1.1754}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, False}, 
     AxesLabel -> {None, None}, 
     AxesOrigin -> {3.740146161*^9, 1.1747950393000084`}, DisplayFunction :> 
     Identity, Frame -> {{True, True}, {True, True}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Charting`FindScaledTicks[
         (Charting`getDateTicks[Automatic, {Automatic}, 
          (Map[DateList, {
            SlotSequence[1]}]& )[
           SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
          Automatic]& )[
          SlotSequence[1]], {Identity, Identity}]& , Charting`ScaledFrameTicks[
         (Charting`getDateTicks[
         Charting`getDateTicks[Automatic, {Automatic}, 
           (Map[DateList, {
             SlotSequence[1]}]& )[
            SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
           Automatic]& , {Automatic}, 
          (Map[DateList, {
            SlotSequence[1]}]& )[
           SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, None]& )[
          SlotSequence[1]], {Identity, Identity}]& }}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{3.740146161*^9, 3.740151441*^9}, {1.174823846952389, 
      1.1754}}, PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, Ticks -> {{}, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"sim EURUSD\"", "\"EURUSD\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.198], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.198], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.198], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.198], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxDividers -> {"Columns" -> {{None}}, "Rows" -> {{None}}}, 
             GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
             GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.011000000000000001`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.011000000000000001`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"True", ",", "True"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}, {
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {2, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "Above"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.7444872492989264`*^9, 3.744487278471314*^9}, {
   3.744487350494973*^9, 3.74448738298962*^9}, {3.7444874654153223`*^9, 
   3.744487481017644*^9}, {3.7444875843660717`*^9, 3.744487595320158*^9}, 
   3.744657348734392*^9, 
   3.744657412797855*^9},ExpressionUUID->"3ccd134e-b7c3-4ea6-a693-\
abd4dedc13e1"]
}, Open  ]]
},
WindowSize->{979, 695},
WindowMargins->{{32, Automatic}, {Automatic, 0}},
FrontEndVersion->"11.2 for Mac OS X x86 (32-bit, 64-bit Kernel) (2017\:5e749\
\:670810\:65e5)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 3315, 83, 260, "Input",ExpressionUUID->"4d0b0518-2efa-457e-8d64-570e7b1ad175"],
Cell[3898, 107, 9131, 192, 273, "Output",ExpressionUUID->"5410c7fc-4545-4064-94c1-4f1917b92da8"],
Cell[13032, 301, 9206, 193, 273, "Output",ExpressionUUID->"a7098e6d-a1d1-44dd-8779-d327d43ac75f"]
}, Open  ]],
Cell[22253, 497, 568, 11, 74, "Item",ExpressionUUID->"9fafa1e6-0f29-4707-87c5-24f3a408e40e"],
Cell[CellGroupData[{
Cell[22846, 512, 4036, 111, 440, "Input",ExpressionUUID->"dbe7fa09-171c-4527-a3b5-59c2153a62f4"],
Cell[26885, 625, 13818, 286, 273, "Output",ExpressionUUID->"f57c063f-3522-4847-8b1c-2ebbe1dc970e"],
Cell[40706, 913, 13665, 284, 273, "Output",ExpressionUUID->"794a4988-f524-4fca-9453-47885c5ceecb"]
}, Open  ]],
Cell[CellGroupData[{
Cell[54408, 1202, 4149, 116, 440, "Input",ExpressionUUID->"84e97509-3f29-478b-ad93-d7ded39e00c1"],
Cell[58560, 1320, 14673, 297, 273, "Output",ExpressionUUID->"a2f7adf7-4424-4415-aafa-5c29c490b473"],
Cell[73236, 1619, 14572, 296, 273, "Output",ExpressionUUID->"cd8e6cbf-bb65-437c-806e-e7fd22c42ca5"]
}, Open  ]],
Cell[CellGroupData[{
Cell[87845, 1920, 2217, 67, 224, "Input",ExpressionUUID->"ebe21e65-8f4d-4a9b-90c4-5e26c3691c71"],
Cell[90065, 1989, 803, 15, 34, "Output",ExpressionUUID->"de63d9c8-939f-47b8-8860-d41e24bb4681"],
Cell[90871, 2006, 804, 15, 34, "Output",ExpressionUUID->"bc99e148-2996-447e-b072-b3e41392114c"]
}, Open  ]],
Cell[91690, 2024, 1450, 35, 136, "Input",ExpressionUUID->"3853a16d-7510-4633-8a0a-eacb33eea236"],
Cell[CellGroupData[{
Cell[93165, 2063, 1981, 61, 101, "Input",ExpressionUUID->"caf17fdb-d65d-4e15-b9e8-449d5efe42f9"],
Cell[95149, 2126, 1157, 29, 68, "Output",ExpressionUUID->"8321975c-ae35-4989-8377-2f90063a667a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[96343, 2160, 1005, 25, 80, "Input",ExpressionUUID->"1e237331-6b55-43b9-9028-e3d4edfca275"],
Cell[97351, 2187, 22459, 428, 264, "Output",ExpressionUUID->"aed77733-a33d-4ed8-8c40-92fbbcab3e95"]
}, Open  ]],
Cell[CellGroupData[{
Cell[119847, 2620, 2015, 62, 101, "Input",ExpressionUUID->"8553a8a6-cddd-4ba7-8e9c-3523d5773556"],
Cell[121865, 2684, 1122, 28, 68, "Output",ExpressionUUID->"eae46224-6222-48c8-af10-c8b7829598bc"]
}, Open  ]],
Cell[CellGroupData[{
Cell[123024, 2717, 1031, 26, 80, "Input",ExpressionUUID->"64024ed7-9d7a-4eba-871b-7e950b0a288b"],
Cell[124058, 2745, 30432, 552, 264, "Output",ExpressionUUID->"a73a8a64-8267-421b-abe7-53a4e5cf3b37"]
}, Open  ]],
Cell[CellGroupData[{
Cell[154527, 3302, 1020, 27, 152, "Input",ExpressionUUID->"fccf08e7-43c7-4306-b9de-410bbbd69863"],
Cell[155550, 3331, 504, 8, 34, "Output",ExpressionUUID->"e2d6435e-05d1-4773-957d-731b29a15b63"],
Cell[156057, 3341, 504, 8, 34, "Output",ExpressionUUID->"51620196-2097-42a0-ad06-665947a739cf"]
}, Open  ]],
Cell[CellGroupData[{
Cell[156598, 3354, 724, 23, 101, "Input",ExpressionUUID->"bb9fe33c-07c0-480f-823b-5afcbcb00b03"],
Cell[157325, 3379, 747, 20, 49, "Output",ExpressionUUID->"ac631439-6d33-4f74-bb58-2d8182dd2c89"]
}, Open  ]],
Cell[158087, 3402, 333, 9, 52, "Input",ExpressionUUID->"ccb00112-bfa9-4f55-8ff4-afc8c7c2aced"],
Cell[158423, 3413, 550, 16, 44, "Input",ExpressionUUID->"26481e59-396e-4177-8734-d771bf1d8a76"],
Cell[CellGroupData[{
Cell[158998, 3433, 668, 16, 80, "Input",ExpressionUUID->"f0dc3d85-3963-42b3-a9f3-5d5109caa895"],
Cell[159669, 3451, 882, 22, 56, "Output",ExpressionUUID->"7119ae18-40a6-4527-b990-bcfa153ae614"]
}, Open  ]],
Cell[160566, 3476, 327, 8, 30, "Input",ExpressionUUID->"8d546570-8365-4d43-ae8c-9621335a31f6"],
Cell[160896, 3486, 3225, 102, 446, "Input",ExpressionUUID->"bb05ed49-1436-4264-8d3c-565399db9b13"],
Cell[CellGroupData[{
Cell[164146, 3592, 5400, 167, 636, "Input",ExpressionUUID->"1fac96b2-2f67-4e0e-800d-2aa469132c36"],
Cell[169549, 3761, 13487, 281, 273, "Output",ExpressionUUID->"0be8447f-d4aa-4789-8544-cdc3e4ad1575"],
Cell[183039, 4044, 13398, 279, 273, "Output",ExpressionUUID->"3ccd134e-b7c3-4ea6-a693-abd4dedc13e1"]
}, Open  ]]
}
]
*)

